import logging
import pytest
import sys
import os
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager

# Add project root to Python path
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from pages.saby_contacts_page import SabyContactsPage

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

class TestSabyToTensor:
    @pytest.fixture
    def driver(self):
        """–§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞"""
        driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))
        driver.implicitly_wait(5)
        yield driver
        driver.quit()

    @pytest.fixture
    def saby_page(self, driver):
        """–§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã Saby"""
        return SabyContactsPage(driver)

    def test_open_contacts_via_menu(self, saby_page):
        """
        –¢–µ—Å—Ç: –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —á–µ—Ä–µ–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é
        """
        print("\n" + "="*60)
        print("–¢–ï–°–¢: –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —á–µ—Ä–µ–∑ –º–µ–Ω—é")
        print("="*60)
        
        try:
            # –ü—Ä–æ–±—É–µ–º –æ—Ç–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ –º–µ–Ω—é
            result = saby_page.open_contacts_via_menu()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            current_url = saby_page.get_current_url()
            assert "/contacts" in current_url, f"–û–∂–∏–¥–∞–ª—Å—è URL —Å /contacts, –Ω–æ –ø–æ–ª—É—á–µ–Ω: {current_url}"
            
            print("üéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û!")
            print(f"–§–∏–Ω–∞–ª—å–Ω—ã–π URL: {current_url}")
            
        except Exception as e:
            print(f"‚ùå –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù: {e}")
            
            # –ü—Ä–æ–±—É–µ–º –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
            print("\nüîÑ –ü—Ä–æ–±—É–µ–º –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç: –ø—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥...")
            try:
                saby_page.open_contacts_direct()
                current_url = saby_page.get_current_url()
                assert "/contacts" in current_url
                print("üéâ –ó–ê–ü–ê–°–ù–û–ô –í–ê–†–ò–ê–ù–¢ –†–ê–ë–û–¢–ê–ï–¢!")
                print(f"–§–∏–Ω–∞–ª—å–Ω—ã–π URL: {current_url}")
            except Exception as e2:
                print(f"‚ùå –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e2}")
                raise

def debug_test():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –±–µ–∑ pytest"""
    print("üöÄ –ó–ê–ü–£–°–ö –û–¢–õ–ê–î–û–ß–ù–û–ì–û –¢–ï–°–¢–ê...")
    
    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))
    saby_page = SabyContactsPage(driver)
    
    try:
        test = TestSabyToTensor()
        test.test_open_contacts_via_menu(saby_page)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    finally:
        input("–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä...")
        driver.quit()

if __name__ == "__main__":
    debug_test()