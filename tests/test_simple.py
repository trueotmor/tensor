import sys
import os
import time
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager

# Add project root to Python path
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from pages.saby_contacts_page import SabyContactsPage
from pages.tensor_main_page import TensorMainPage
from pages.tensor_about_page import TensorAboutPage

def test_full_scenario():
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è")
    
    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))
    
    try:
        # 1. Saby –∫–æ–Ω—Ç–∞–∫—Ç—ã
        saby_page = SabyContactsPage(driver)
        saby_page.open_contacts_page()
        
        # 2. –ë–∞–Ω–Ω–µ—Ä –¢–µ–Ω–∑–æ—Ä
        saby_page.click_tensor_banner()
        
        # 3. Tensor –≥–ª–∞–≤–Ω–∞—è
        tensor_main = TensorMainPage(driver)
        
        # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∞ "–°–∏–ª–∞ –≤ –ª—é–¥—è—Ö"
        assert tensor_main.is_power_block_displayed(), "–ë–ª–æ–∫ '–°–∏–ª–∞ –≤ –ª—é–¥—è—Ö' –Ω–µ –Ω–∞–π–¥–µ–Ω"
        print("‚úÖ –ë–ª–æ–∫ '–°–∏–ª–∞ –≤ –ª—é–¥—è—Ö' –Ω–∞–π–¥–µ–Ω")
        
        # 5. –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ü–æ–¥—Ä–æ–±–Ω–µ–µ
        tensor_main.click_details()
        
        # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ URL about
        current_url = driver.current_url
        assert current_url == "https://tensor.ru/about", f"–û–∂–∏–¥–∞–ª—Å—è https://tensor.ru/about, –ø–æ–ª—É—á–µ–Ω {current_url}"
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É about")
        
        # 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        tensor_about = TensorAboutPage(driver)
        assert tensor_about.verify_images_same_size(), "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ—é—Ç —Ä–∞–∑–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã"
        print("‚úÖ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞")
        
        print("\nüéâ –í–ï–°–¨ –°–¶–ï–ù–ê–†–ò–ô –£–°–ü–ï–®–ù–û –í–´–ü–û–õ–ù–ï–ù!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        raise
    finally:
        driver.quit()

if __name__ == "__main__":
    test_full_scenario()